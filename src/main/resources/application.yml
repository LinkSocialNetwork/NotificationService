#
##GATEWAY'S CONFIG
#server:
#  port: 0

#spring:
#  application:
#    name: notifications
#  datasource:
#    url: jdbc:postgresql://revpracticedb.chqf3b3u3aqm.us-east-2.rds.amazonaws.com/p3link
#    username: ${LINK_NOTIFICATIONS_DB_USERNAME}
#    password: ${LINK_NOTIFICATIONS_DB_PASSWORD}
#    driver-class-name: org.postgresql.Driver
#  jpa:
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    show-sql: false
#    hibernate:
#      ddl-auto: create
#    properties:
#      hibernate:
#        temp:
#          use_jdbc_metadata_defaults: false
#        jdbc:
#          lob:
#            non_contextual_creation: true
#
##hibernate:
##  dialect: org.hibernate.dialect.PostgresSQL82Dialect
##  hbm2ddl:
##    auto: create-drop
#
#eureka:
#  client:
#    service-url:
#      defaultZone: http://localhost:9999/eureka
#    fetch-registry: true
#    register-with-eureka: true
#  instance:
#    instance-id:  ${spring.application.name}:${random.value}

#USERSERVICE'S CONFIG

server:
  port: 0
spring:
  application:
    name: notificationservice
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  datasource:
    url: jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1
    password: sa
    username: mypass
    driverClassName: org.h2.Driver
    data: classpath:./testdata.sql
    initialize: true
    initialization-mode: always
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
        jdbc:
          lob:
            non_contextual_creation: true
eureka:
  client:
    service-url:
      defaultZone: http://localhost:9999/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    instance-id:  ${spring.application.name}:${random.value}
    preferIpAddress: true
